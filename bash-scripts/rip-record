#!/bin/bash

# rip-record - execute ffmpeg commands based on matching url

[[ $# -eq 1 ]] || [[ $# -eq 3 ]] || exit # check if 1 or 3 arguments are passed to script
[[ "$1" =~ \.txt$ ]] && videourl=$(<"$1") || videourl="$1" # videourl in first argument

# enable shell globbing for pattern matching
shopt -s extglob 

# ffmpeg duration
tflag="$2"
duration="$3" 

# video recording file path
recordingfile="$HOME/Desktop/video-$(date +"%Y-%m-%d-%H-%M-%S").mkv" 

# case statement switch on pattern match
videofile="@(http|https)://[a-zA-Z0-9:0-9./?=_@%-]*\.@(mkv|mp4|avi|flv)" # video file
m3u8="@(http|https)://[a-zA-Z0-9:0-9./?=_,@\&%-]*\.m3u8" # m3u8 playlist
m3u8token="@(http|https)://[a-zA-Z0-9:0-9./?=_@%-]*\.m3u8\?token=[a-zA-Z0-9\&=]*" # m3u8 playlist + token
xforward="@(http|https)://[a-zA-Z0-9./?=_@%-]*\.m3u8\|X-Forwarded-For=+([0-9])\.+([0-9])\.+([0-9])\.+([0-9])" # x-forward

# pattern match inside command
xforwardip="${videourl#*X-Forwarded-For=}"
xforwardm3u8="${videourl%%\|X-Forwarded-For=*}"

# case statement with regular expression to execute ffmpeg commands based on matching url
case "$videourl" in
	$videofile) # video file
		ffmpeg -hide_banner -i "$videourl" -c:v copy -c:a copy "$tflag" "$duration" "$recordingfile";;
	$m3u8) 		# m3u8 playlist
		ffmpeg -hide_banner -loglevel error -i "$videourl" \
		-c:v copy -bsf:a aac_adtstoasc "$tflag" "$duration" "$recordingfile";;
	$m3u8token) # m3u8 playlist + token
		ffmpeg -hide_banner -loglevel error -i "$videourl" \
		-bsf:v mpeg4_unpack_bframes -bsf:a aac_adtstoasc "$tflag" "$duration" "$recordingfile";;
	$xforward) # xforward
		ffmpeg -hide_banner -headers 'X-Forwarded-For: '"$xforwardip"''$'\r\n' -i "$xforwardm3u8" \
		-c:v copy -bsf:a aac_adtstoasc "$tflag" "$duration" "$recordingfile";;
	*) ffmpeg -hide_banner -i "$videourl" -c:v copy -c:a copy "$tflag" "$duration" "$recordingfile";; # wildcard
esac 

# turn off shell globbing
shopt -u extglob 
