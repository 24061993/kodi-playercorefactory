#!/bin/bash

# rip-record - execute ffmpeg commands based on matching url 
#===========================================================

# exit status
SUCCESS=0
E_NOARGS=65
script_usage="Usage: $(basename $0) [video url] [-t] [00:00:00]"
first_argument="(http|https|rtmp|rtmpe)://"
second_argument="^-t$"
third_argument=""

# check if 1 or 3 arguments are passed to script
#[[ $# -eq 1 ]] || [[ $# -eq 3 ]] || exit
[[ $# -eq 1 ]] || [[ $# -eq 3 ]] || exit "$E_NOARGS"  
[[ "$1" =~ \.txt$ ]] && videourl=$(cat "$1") || videourl="$1"

# check
if ! [[ $videourl =~ $first_argument ]]; then
   printf "%s\n" "$script_usage"
	exit "$E_NOARGS" 
fi


if ! [[ $2 =~ $second_argument ]]; then
   printf "%s\n" "$script_usage"
	exit "$E_NOARGS" 
fi

# enable shell globbing for pattern matching
shopt -s extglob 

# validate arguments passed to script
# $1 == http|https|rtmp|rtmpe

# check if 3 args are passed to script
# $2 == -t
#[[ "$2" =~ ^-t$ ]] && echo yes
# $3 == 00:00:00 syntax

# ffmpeg duration 2nd and 3rd arguments passed to script
tflag="$2"
duration="$3" 

# video recording file path
recordingfile="$HOME/Desktop/video-$(date +"%Y-%m-%d-%H-%M-%S").mkv" 

# case statement switch on pattern match
videofile="@(http|https)://[a-zA-Z0-9:0-9./?=_@%-]*\.@(mkv|mp4|avi|flv)" # video file
m3u8="@(http|https)://[a-zA-Z0-9:0-9./?=_,@\&%-]*\.m3u8" # m3u8 playlist
m3u8token="@(http|https)://[a-zA-Z0-9:0-9./?=_@%-]*\.m3u8\?token=[a-zA-Z0-9\&=]*" # m3u8 playlist + token
xforward="@(http|https)://[a-zA-Z0-9./?=_@%-]*\.m3u8\|X-Forwarded-For=+([0-9])\.+([0-9])\.+([0-9])\.+([0-9])" # x-forward
useref="@(http|https)://[a-zA-Z0-9:0-9./?=_@%-]*\.@(mkv|mp4|avi|flv)\|[uU]ser-[aA]gent=[a-zA-Z0-9/.()[:blank:],:;%+-]*\&[rR]eferer=@(http|https)@(://|%3A%2F%2F)[a-zA-Z%0-9./?=_-]*" # user agent + referer

# grep inside url to extract strings
videofile_case=$(printf "%s" "$videourl" | grep -Eo '(http|https)://[a-zA-Z0-9:0-9./?=_@%-]*\.(mkv|mp4|avi|flv)')
m3u8_case=$(printf "%s" "$videourl" | grep -Eo '(http|https)://[a-zA-Z0-9:0-9./?=_,@&%-]*\.(m3u8)')
useragent=$(printf "%s" "$videourl" | grep -Eo 'u?User-a?Agent=[a-zA-Z0-9/.()[:blank:],:;%+_-]*[^&]')
referer=$(printf "%s" "$videourl" | grep -Eo 'r?Referer=(http|https)(://|%3A%2F%2F)[a-zA-Z%0-9./?=_-]*'| sed 's/[r-R]eferer=//')
xforwardip=$(printf "%s" "$videourl" | grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')


# case statement with regular expression to execute ffmpeg commands based on matching url
case "$videourl" in
	$videofile)     # video file
		echo ffmpeg -hide_banner -i "$videofile_case" -c:v copy -c:a copy "$tflag" "$duration" "$recordingfile";;
	$m3u8)          # m3u8 playlist
		ffmpeg -hide_banner -loglevel error -i "$videourl" \
		-c:v copy -bsf:a aac_adtstoasc "$tflag" "$duration" "$recordingfile";;
	$m3u8token)     # m3u8 playlist + token
		ffmpeg -hide_banner -loglevel error -i "$videourl" \
		-bsf:v mpeg4_unpack_bframes -bsf:a aac_adtstoasc "$tflag" "$duration" "$recordingfile";;
	$xforward)      # xforward
		ffmpeg -hide_banner -headers 'X-Forwarded-For: '"$xforwardip"''$'\r\n' -i "$m3u8_case" \
		-c:v copy -bsf:a aac_adtstoasc "$tflag" "$duration" "$recordingfile";;
	$useref)        # useragent referer
		ffmpeg -hide_banner -user-agent "$useragent" -headers 'Referer: '"$referer"''$'\r\n' \
		-i "$videofile_case" -c:v copy -c:a copy "$tflag" "$duration" "$recordingfile";;
	$m3u8useragent) # m3u8 user agent
		echo ffmpeg -hide_banner -loglevel error \
		-c:v copy -bsf:a aac_adtstoasc "$tflag" "$duration" "$recordingfile";;
	*) 		       # wildcard
		#ffmpeg -hide_banner -i "$videourl" -c:v copy -c:a copy "$tflag" "$duration" "$recordingfile";; 
		echo 'not found';;
esac 

# turn off shell globbing
shopt -u extglob 
